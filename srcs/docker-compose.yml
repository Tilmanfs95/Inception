### Services ###
services:
  # Nginx
  nginx:
    container_name: nginx
    build: 
      context: .
      dockerfile: requirements/nginx/Dockerfile
      args:
        - WP_DOMAIN
        - ADMINER_DOMAIN
        - THELOUNGE_DOMAIN
        - GOACCESS_DOMAIN
        - STATIC_DOMAIN
        - CERT_PATH
        - CERT_KEY_PATH
    restart: always
    ports:
      - "443:443"         
    volumes:
      - wp_files:/var/www/html/wordpress
      - goaccess_files:/var/www/html/goaccess
      - nginx_logs:/var/log/nginx
    networks:
      - incepnet
  # Wordpress 
  wordpress:
    container_name: wordpress
    build:
      context:  ./requirements/wordpress
    restart: always
    volumes:
      - wp_files:/var/www/html
    environment:
      - MYSQL_HOSTNAME=$MYSQL_HOSTNAME
      - MYSQL_DATABASE=$MYSQL_DATABASE
      - MYSQL_USER=$MYSQL_USER
      - MYSQL_PASSWORD=$MYSQL_PASSWORD
    networks:
      - incepnet
  # MariaDB
  mariadb:
    container_name: mariadb
    hostname: $MYSQL_HOSTNAME
    build:
      context: ./requirements/mariadb
      args:
        - MYSQL_ROOT_PASSWORD
        - MYSQL_DATABASE
        - MYSQL_USER
        - MYSQL_PASSWORD
        - WP_TITLE
        - WP_ADMIN
        - WP_ADMIN_PASSWORD
        - WP_USER
        - WP_USER_PASSWORD
    restart: always
    volumes:
      - db_files:/var/lib/mysql
    networks:
      - incepnet
  # Redis
  redis:
    container_name: redis
    build:
      context: ./requirements/bonus/redis
    restart: always
    networks:
      - incepnet
  # Adminer
  adminer:
    container_name: adminer
    build: ./requirements/bonus/adminer
    restart: always
    networks:
      - incepnet
  # Ftp
  ftp:
    container_name: ftp
    build:
      context: .
      dockerfile: requirements/bonus/ftp/Dockerfile
      args:
        - FTP_USER
        - FTP_PASSWORD
        - CERT_PATH
        - CERT_KEY_PATH
    restart: always
    ports:
      - "21:21"
      - "10000-10100:10000-10100" # passive port range (file-transfer)
    volumes:
      - wp_files:/home/$FTP_USER/wordpress
    networks:
      - incepnet
  # TheLounge (irc-client)
  thelounge:
    container_name: thelounge
    build:
      context: ./requirements/bonus/thelounge
    restart: always
    networks:
      - incepnet
  # ft_irc (irc-server)
  ft_irc:
    container_name: ft_irc
    build:
      context: ./requirements/bonus/ft_irc
    restart: always
    networks:
      - incepnet
  # Goaccess
  goaccess:
    container_name: goaccess
    build:
      context: ./requirements/bonus/goaccess
    restart: always
    environment:
      - GOACCESS_DOMAIN=$GOACCESS_DOMAIN
    volumes:
      - nginx_logs:/var/log/nginx
      - goaccess_files:/var/www/html
    networks:
      - incepnet
  # Static website (Flask)
  static:
    container_name: static
    build:
      context: ./requirements/bonus/static
    restart: always
    networks:
      - incepnet


### Volumes ###
volumes:
  # Wordpress files
  wp_files:
    driver: local
    driver_opts:
      type: none
      o: bind 
      device: $WP_FILES_PATH
  # Database files
  db_files:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: $DB_FILES_PATH
  # Goaccess files (only the report.html)
  goaccess_files:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: $GOACCESS_FILES_PATH
  # Nginx logs (needed for goaccess)
  nginx_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: $NGINX_LOGS_PATH


### Networks ###
networks:
  # Incepnet (bridge network)
  incepnet:
    driver: bridge
